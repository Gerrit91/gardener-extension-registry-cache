name: Verify and Build

on:
  pull_request:
    branches:
      - main
    paths-ignore:
    - 'docs/**'
    - '**/*.md'
  release:
    types:
    - published
  push:
    branches:
    - main
    tags:
    - v*
    paths-ignore:
    - 'docs/**'
    - '**/*.md'

jobs:
  verify:
    runs-on: ubuntu-latest
    env:
      GOPATH: ${{ github.workspace }}
      GOBIN: ${{ github.workspace }}/bin
    defaults:
      run:
        working-directory: ${{ env.GOPATH }}/src/github.com/Gerrit91/gardener-extension-registry-cache

    steps:
    - uses: actions/checkout@v2
      with:
        path: ${{ env.GOPATH }}/src/github.com/Gerrit91/gardener-extension-registry-cache
    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.19
    - name: Configure git
      run: |
        git config --global user.email "gardener@gardener.cloud"
        git config --global user.name "Gardener CI/CD"
    - name: Verify
      # check-generate makes problems in github actions, let's only do verify for now
      run: make verify

  buildAndPush:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
        - name: gardener-extension-registry-cache
        - name: gardener-extension-registry-cache-admission
          tagSuffix: /admission
    steps:
    - uses: actions/checkout@v2
    - name: Setup Docker buildx
      uses: docker/setup-buildx-action@v1
      with:
        install: true
    - name: Login to GHCR
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - uses: docker/metadata-action@v3
      id: meta
      with:
        images: |
          ghcr.io/${{ github.repository }}${{ matrix.tagSuffix }}
        tags: |
          type=ref,event=branch
          type=ref,event=tag
          type=ref,event=pr
          type=sha
        flavor: |
          latest=${{ endsWith(github.ref, github.event.repository.default_branch) }}

    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: ${{ matrix.context }}
        target: ${{ matrix.name }}
        platforms: linux/amd64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        secrets: |
          GIT_AUTH_TOKEN=${{ secrets.GITHUB_TOKEN }}
